module Evergreen.Migrate.V2 exposing (..)

{-| This migration file was automatically generated by the lamdera compiler.

It includes:

  - A migration for each of the 6 Lamdera core types that has changed
  - A function named `migrate_ModuleName_TypeName` for each changed/custom type

Expect to see:

  - `Unimplement–µd` values as placeholders wherever I was unable to figure out a clear migration path for you
  - `@NOTICE` comments for things you should know about, i.e. new custom type constructors that won't get any
    value mappings from the old type by default

You can edit this file however you wish! It won't be generated again.

See <https://dashboard.lamdera.app/docs/evergreen> for more info.

-}

import Evergreen.V1.Types
import Evergreen.V2.Types exposing (AutoPush(..), Name(..), State(..))
import Lamdera.Migrations exposing (..)


frontendModel : Evergreen.V1.Types.FrontendModel -> ModelMigration Evergreen.V2.Types.FrontendModel Evergreen.V2.Types.FrontendMsg
frontendModel old =
    ModelMigrated ( migrate_Types_FrontendModel old, Cmd.none )


backendModel : Evergreen.V1.Types.BackendModel -> ModelMigration Evergreen.V2.Types.BackendModel Evergreen.V2.Types.BackendMsg
backendModel old =
    ModelMigrated ( migrate_Types_BackendModel old, Cmd.none )


frontendMsg : Evergreen.V1.Types.FrontendMsg -> MsgMigration Evergreen.V2.Types.FrontendMsg Evergreen.V2.Types.FrontendMsg
frontendMsg old =
    MsgMigrated ( migrate_Types_FrontendMsg old, Cmd.none )


toBackend : Evergreen.V1.Types.ToBackend -> MsgMigration Evergreen.V2.Types.ToBackend Evergreen.V2.Types.BackendMsg
toBackend old =
    MsgMigrated ( migrate_Types_ToBackend old, Cmd.none )


backendMsg : Evergreen.V1.Types.BackendMsg -> MsgMigration Evergreen.V2.Types.BackendMsg Evergreen.V2.Types.BackendMsg
backendMsg old =
    MsgUnchanged


toFrontend : Evergreen.V1.Types.ToFrontend -> MsgMigration Evergreen.V2.Types.ToFrontend Evergreen.V2.Types.FrontendMsg
toFrontend old =
    MsgMigrated ( migrate_Types_ToFrontend old, Cmd.none )


migrate_Types_BackendModel : Evergreen.V1.Types.BackendModel -> Evergreen.V2.Types.BackendModel
migrate_Types_BackendModel old =
    { teacher = old.teacher
    , hashPrefixLen = old.hashPrefixLen
    , draftMessage = Nothing
    , messages = old.messages
    , shareRequests = old.shareRequests
    , autoHashing = old.autoHashing |> migrate_Types_AutoHashing
    , state = Active
    }


migrate_Types_AnonState : Evergreen.V1.Types.AnonState -> Evergreen.V2.Types.AnonState
migrate_Types_AnonState old =
    case old of
        Evergreen.V1.Types.LoginUnattempted ->
            Evergreen.V2.Types.LoginUnattempted

        Evergreen.V1.Types.LoginInProgress ->
            Evergreen.V2.Types.LoginInProgress

        Evergreen.V1.Types.LoginFailed ->
            Evergreen.V2.Types.LoginFailed

        Evergreen.V1.Types.WaitingForTeacher ->
            Evergreen.V2.Types.WaitingForTeacher


migrate_Types_AutoHashing : Evergreen.V1.Types.AutoHashing -> Evergreen.V2.Types.AutoHashing
migrate_Types_AutoHashing old =
    case old of
        Evergreen.V1.Types.Enabled p0 ->
            Evergreen.V2.Types.Enabled p0

        Evergreen.V1.Types.Disabled ->
            Evergreen.V2.Types.Disabled


migrate_Types_ClientRole : Evergreen.V1.Types.ClientRole -> Evergreen.V2.Types.ClientRole
migrate_Types_ClientRole old =
    case old of
        Evergreen.V1.Types.Student ->
            Evergreen.V2.Types.Student

        Evergreen.V1.Types.Teacher ->
            Evergreen.V2.Types.Teacher


migrate_Types_FeModel : Evergreen.V1.Types.FeModel -> Evergreen.V2.Types.FeModel
migrate_Types_FeModel old =
    { name = Naming ""
    , message = old.message
    , autoHashSuffix = old.autoHashSuffix
    , hashPrefixLen = old.hashPrefixLen
    , messages = old.messages
    , shareRequests = old.shareRequests
    , autoHashing = old.autoHashing |> migrate_Types_AutoHashing
    , autoPush = AutoPushDisabled
    , role = old.role |> migrate_Types_ClientRole
    , state = Active
    }


migrate_Types_FrontendModel : Evergreen.V1.Types.FrontendModel -> Evergreen.V2.Types.FrontendModel
migrate_Types_FrontendModel old =
    case old of
        Evergreen.V1.Types.AnonFrontend p0 p1 ->
            Evergreen.V2.Types.AnonFrontend p0 (p1 |> migrate_Types_AnonState)

        Evergreen.V1.Types.LoggedIn p0 ->
            Evergreen.V2.Types.LoggedIn (p0 |> migrate_Types_FeModel)


migrate_Types_FrontendMsg : Evergreen.V1.Types.FrontendMsg -> Evergreen.V2.Types.FrontendMsg
migrate_Types_FrontendMsg old =
    case old of
        Evergreen.V1.Types.NoOpFrontendMsg ->
            Evergreen.V2.Types.NoOpFrontendMsg

        Evergreen.V1.Types.SetPassword p0 ->
            Evergreen.V2.Types.SetPassword p0

        Evergreen.V1.Types.Login ->
            Evergreen.V2.Types.Login

        Evergreen.V1.Types.WaitForTeacher ->
            Evergreen.V2.Types.WaitForTeacher

        Evergreen.V1.Types.ReLogin ->
            Evergreen.V2.Types.ReLogin

        Evergreen.V1.Types.UpdateMessage p0 ->
            Evergreen.V2.Types.UpdateMessage p0

        Evergreen.V1.Types.UpdatePrefixLenFe p0 ->
            Evergreen.V2.Types.UpdatePrefixLenFe p0

        Evergreen.V1.Types.ShareMessageFe ->
            Evergreen.V2.Types.ShareMessageFe

        Evergreen.V1.Types.PermitMessageFe p0 ->
            Evergreen.V2.Types.PermitMessageFe p0

        Evergreen.V1.Types.DenyMessageFe p0 ->
            Evergreen.V2.Types.DenyMessageFe p0

        Evergreen.V1.Types.DeleteMessageFe p0 ->
            Evergreen.V2.Types.DeleteMessageFe p0

        Evergreen.V1.Types.ClearMessagesFe ->
            Evergreen.V2.Types.ClearMessagesFe

        Evergreen.V1.Types.EnableAutoHashFe ->
            Evergreen.V2.Types.EnableAutoHashFe

        Evergreen.V1.Types.DisableAutoHashFe ->
            Evergreen.V2.Types.DisableAutoHashFe

        Evergreen.V1.Types.UpdateAutoHashPrefixLen p0 ->
            Evergreen.V2.Types.UpdateAutoHashPrefixLen p0

        Evergreen.V1.Types.AutoHash ->
            Evergreen.V2.Types.AutoHash


migrate_Types_ToBackend : Evergreen.V1.Types.ToBackend -> Evergreen.V2.Types.ToBackend
migrate_Types_ToBackend old =
    case old of
        Evergreen.V1.Types.TeacherLogin p0 ->
            Evergreen.V2.Types.TeacherLogin p0

        Evergreen.V1.Types.UpdatePrefixLenBe p0 ->
            Evergreen.V2.Types.UpdatePrefixLenBe p0

        Evergreen.V1.Types.ShareMessage p0 ->
            Evergreen.V2.Types.ShareMessage p0

        Evergreen.V1.Types.PermitMessage p0 ->
            Evergreen.V2.Types.PermitMessage p0

        Evergreen.V1.Types.DenyMessage p0 ->
            Evergreen.V2.Types.DenyMessage p0

        Evergreen.V1.Types.DeleteMessage p0 ->
            Evergreen.V2.Types.DeleteMessage p0

        Evergreen.V1.Types.ClearMessages ->
            Evergreen.V2.Types.ClearMessages

        Evergreen.V1.Types.EnableAutoHash ->
            Evergreen.V2.Types.EnableAutoHash

        Evergreen.V1.Types.DisableAutoHash ->
            Evergreen.V2.Types.DisableAutoHash


migrate_Types_ToFrontend : Evergreen.V1.Types.ToFrontend -> Evergreen.V2.Types.ToFrontend
migrate_Types_ToFrontend old =
    case old of
        Evergreen.V1.Types.TeacherLoginOk p0 ->
            Evergreen.V2.Types.TeacherLoginOk
                { hashPrefixLen = p0.hashPrefixLen
                , draftMessage = Nothing
                , messages = p0.messages
                , shareRequests = p0.shareRequests
                , autoHashing = p0.autoHashing |> migrate_Types_AutoHashing
                , state = Active
                }

        Evergreen.V1.Types.TeacherLoginBad ->
            Evergreen.V2.Types.TeacherLoginBad

        Evergreen.V1.Types.TeacherArrived p0 ->
            Evergreen.V2.Types.TeacherArrived
                { hashPrefixLen = p0.hashPrefixLen
                , draftMessage = Nothing
                , messages = p0.messages
                , autoHashing = p0.autoHashing |> migrate_Types_AutoHashing
                , state = Active
                }

        Evergreen.V1.Types.PrefixLenUpdated p0 ->
            Evergreen.V2.Types.PrefixLenUpdated p0

        Evergreen.V1.Types.ShareMessageRequest p0 ->
            Evergreen.V2.Types.ShareMessageRequest p0

        Evergreen.V1.Types.MessageShared p0 ->
            Evergreen.V2.Types.MessageShared p0

        Evergreen.V1.Types.MessageDeleted p0 ->
            Evergreen.V2.Types.MessageDeleted p0

        Evergreen.V1.Types.MessagesCleared ->
            Evergreen.V2.Types.MessagesCleared

        Evergreen.V1.Types.AutoHashEnabled p0 ->
            Evergreen.V2.Types.AutoHashEnabled p0

        Evergreen.V1.Types.AutoHashDisabled ->
            Evergreen.V2.Types.AutoHashDisabled
